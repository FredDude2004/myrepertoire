# docker-compose.yml
# version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: myrepertoire-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: myrepertoire-db
      POSTGRES_PASSWORD: /run/secrets/postgres-password
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    secrets:
      - postgres-password

  backend:
    build: ./backend
    image: ghcr.io/freddude2004/myrepertoire-backend:latest
    container_name: myrepertoire-backend
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-password
      DSTATBASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@db:5432/myrepertoire-db?sslmode=disable
    secrets:
      - postgres-password
    depends_on:
      - db

  frontend:
    build: ./frontend
    image: ghcr.io/freddude2004/myrepertoire-frontend:latest
    container_name: myrepertoire-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_URL=http://myrepertoire-backend:8080
    depends_on:
      - backend
    profiles: ["prod"]

  frontend-dev:
    image: node:20-alpine
    container_name: myrepertoire-frontend-dev
    working_dir: /app/frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - NEXT_PUBLIC_BACKEND_URL=http://myrepertoire-backend:8080
    depends_on:
      - backend
    command: >
      sh -c "npm install && npm run dev"
    profiles: ["dev"]

volumes:
   db-data:

secrets:
  postgres-password:
    file: ./db/postgres-password.txt
