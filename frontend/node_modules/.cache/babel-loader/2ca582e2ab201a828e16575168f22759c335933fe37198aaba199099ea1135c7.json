{"ast":null,"code":"var _jsxFileName = \"/home/fred/Desktop/projects/myrepertoire.io/frontend/src/components/Pieces/Pieces.js\",\n  _s = $RefreshSig$();\nimport \"./Pieces.css\";\nimport Piece from \"./Piece\";\nimport { useRef } from \"react\";\nimport { useAppContext } from \"../../contexts/Context\";\nimport { openPromotion } from \"../../reducer/actions/popup\";\nimport { getCastlingDirections } from \"../../arbiter/getMoves\";\nimport { updateCastling, detectStalemate, detectInsufficientMaterial, detectCheckmate } from \"../../reducer/actions/game\";\nimport { makeNewMove, clearCandidates } from \"../../reducer/actions/move\";\nimport arbiter from \"../../arbiter/arbiter\";\nimport { getNewMoveNotation } from \"../../helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pieces = () => {\n  _s();\n  const {\n    appState,\n    dispatch\n  } = useAppContext();\n  const currentPosition = appState.position[appState.position.length - 1];\n  const previousePosition = appState.position[appState.position.length - 2];\n  const ref = useRef();\n  const updateCastlingState = _ref => {\n    let {\n      piece,\n      file,\n      rank\n    } = _ref;\n    const direction = getCastlingDirections({\n      castleDirection: appState.castleDirection,\n      piece,\n      file,\n      rank\n    });\n    if (direction) {\n      dispatch(updateCastling(direction));\n    }\n  };\n  const openPromotionBox = _ref2 => {\n    let {\n      rank,\n      file,\n      x,\n      y\n    } = _ref2;\n    dispatch(openPromotion({\n      rank: Number(rank),\n      file: Number(file),\n      x,\n      y\n    }));\n  };\n  const calculateCoords = e => {\n    const {\n      top,\n      left,\n      width\n    } = ref.current.getBoundingClientRect();\n    const size = width / 8;\n    const y = Math.floor((e.clientX - left) / size);\n    const x = 7 - Math.floor((e.clientY - top) / size);\n    return {\n      x,\n      y\n    };\n  };\n  const move = e => {\n    const {\n      x,\n      y\n    } = calculateCoords(e);\n    const [piece, rank, file] = e.dataTransfer.getData(\"text\").split(\",\");\n    if (appState.candidateMoves.find(m => m[0] === x && m[1] === y)) {\n      const opponent = piece.startsWith(\"b\") ? \"w\" : \"b\";\n      const castleDirection = appState.castleDirection[`${piece.startsWith(\"b\") ? \"white\" : \"black\"}`];\n      if (piece === \"wp\" && x === 7 || piece === \"bp\" && x === 0) {\n        openPromotionBox({\n          rank,\n          file,\n          x,\n          y\n        });\n        return;\n      }\n      if (piece.endsWith(\"r\") || piece.endsWith(\"k\")) {\n        updateCastlingState({\n          piece,\n          file,\n          rank\n        });\n      }\n      const newPosition = arbiter.performMove({\n        position: currentPosition,\n        piece,\n        rank,\n        file,\n        x,\n        y\n      });\n      const newMove = getNewMoveNotation({\n        piece,\n        rank,\n        file,\n        x,\n        y,\n        position: currentPosition,\n        previousPosition: previousePosition\n      });\n      console.log(\"New Move:\", newMove);\n      dispatch(makeNewMove({\n        newPosition,\n        newMove\n      }));\n      if (arbiter.insufficientMaterial(newPosition)) dispatch(detectInsufficientMaterial());else if (arbiter.isStalemate(newPosition, opponent, castleDirection)) {\n        dispatch(detectStalemate());\n      } else if (arbiter.isCheckMate(newPosition, opponent, castleDirection)) {\n        dispatch(detectCheckmate(piece[0]));\n      }\n    }\n    dispatch(clearCandidates());\n  };\n  const onDrop = e => {\n    e.preventDefault();\n    move(e);\n  };\n  const onDragOver = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pieces\",\n    ref: ref,\n    onDrop: onDrop,\n    onDragOver: onDragOver,\n    children: currentPosition.map((r, rank) => r.map((f, file) => currentPosition[rank][file] ? /*#__PURE__*/_jsxDEV(Piece, {\n      rank: rank,\n      file: file,\n      piece: currentPosition[rank][file]\n    }, rank + \"-\" + file, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }, this) : null))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(Pieces, \"6AYmuEw+TsKaEACR9X8exstYPcY=\", false, function () {\n  return [useAppContext];\n});\n_c = Pieces;\nexport default Pieces;\nvar _c;\n$RefreshReg$(_c, \"Pieces\");","map":{"version":3,"names":["Piece","useRef","useAppContext","openPromotion","getCastlingDirections","updateCastling","detectStalemate","detectInsufficientMaterial","detectCheckmate","makeNewMove","clearCandidates","arbiter","getNewMoveNotation","jsxDEV","_jsxDEV","Pieces","_s","appState","dispatch","currentPosition","position","length","previousePosition","ref","updateCastlingState","_ref","piece","file","rank","direction","castleDirection","openPromotionBox","_ref2","x","y","Number","calculateCoords","e","top","left","width","current","getBoundingClientRect","size","Math","floor","clientX","clientY","move","dataTransfer","getData","split","candidateMoves","find","m","opponent","startsWith","endsWith","newPosition","performMove","newMove","previousPosition","console","log","insufficientMaterial","isStalemate","isCheckMate","onDrop","preventDefault","onDragOver","className","children","map","r","f","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/fred/Desktop/projects/myrepertoire.io/frontend/src/components/Pieces/Pieces.js"],"sourcesContent":["import \"./Pieces.css\";\nimport Piece from \"./Piece\";\nimport { useRef } from \"react\";\nimport { useAppContext } from \"../../contexts/Context\";\nimport { openPromotion } from \"../../reducer/actions/popup\";\nimport { getCastlingDirections } from \"../../arbiter/getMoves\";\nimport {\n    updateCastling,\n    detectStalemate,\n    detectInsufficientMaterial,\n    detectCheckmate,\n} from \"../../reducer/actions/game\";\n\nimport { makeNewMove, clearCandidates } from \"../../reducer/actions/move\";\nimport arbiter from \"../../arbiter/arbiter\";\nimport { getNewMoveNotation } from \"../../helper\";\n\nconst Pieces = () => {\n    const { appState, dispatch } = useAppContext();\n    const currentPosition = appState.position[appState.position.length - 1];\n    const previousePosition = appState.position[appState.position.length - 2];\n\n    const ref = useRef();\n\n    const updateCastlingState = ({ piece, file, rank }) => {\n        const direction = getCastlingDirections({\n            castleDirection: appState.castleDirection,\n            piece,\n            file,\n            rank,\n        });\n        if (direction) {\n            dispatch(updateCastling(direction));\n        }\n    };\n\n    const openPromotionBox = ({ rank, file, x, y }) => {\n        dispatch(\n            openPromotion({\n                rank: Number(rank),\n                file: Number(file),\n                x,\n                y,\n            }),\n        );\n    };\n\n    const calculateCoords = (e) => {\n        const { top, left, width } = ref.current.getBoundingClientRect();\n        const size = width / 8;\n        const y = Math.floor((e.clientX - left) / size);\n        const x = 7 - Math.floor((e.clientY - top) / size);\n\n        return { x, y };\n    };\n\n    const move = (e) => {\n        const { x, y } = calculateCoords(e);\n        const [piece, rank, file] = e.dataTransfer.getData(\"text\").split(\",\");\n\n        if (appState.candidateMoves.find((m) => m[0] === x && m[1] === y)) {\n            const opponent = piece.startsWith(\"b\") ? \"w\" : \"b\";\n            const castleDirection =\n                appState.castleDirection[\n                `${piece.startsWith(\"b\") ? \"white\" : \"black\"}`\n                ];\n\n            if ((piece === \"wp\" && x === 7) || (piece === \"bp\" && x === 0)) {\n                openPromotionBox({ rank, file, x, y });\n                return;\n            }\n            if (piece.endsWith(\"r\") || piece.endsWith(\"k\")) {\n                updateCastlingState({ piece, file, rank });\n            }\n            const newPosition = arbiter.performMove({\n                position: currentPosition,\n                piece,\n                rank,\n                file,\n                x,\n                y,\n            });\n            const newMove = getNewMoveNotation({\n                piece,\n                rank,\n                file,\n                x,\n                y,\n                position: currentPosition,\n                previousPosition: previousePosition,\n            });\n            console.log(\"New Move:\", newMove);\n            dispatch(makeNewMove({ newPosition, newMove }));\n\n            if (arbiter.insufficientMaterial(newPosition))\n                dispatch(detectInsufficientMaterial());\n            else if (arbiter.isStalemate(newPosition, opponent, castleDirection)) {\n                dispatch(detectStalemate());\n            } else if (arbiter.isCheckMate(newPosition, opponent, castleDirection)) {\n                dispatch(detectCheckmate(piece[0]));\n            }\n        }\n        dispatch(clearCandidates());\n    };\n\n    const onDrop = (e) => {\n        e.preventDefault();\n\n        move(e);\n    };\n\n    const onDragOver = (e) => {\n        e.preventDefault();\n    };\n\n    return (\n        <div className=\"pieces\" ref={ref} onDrop={onDrop} onDragOver={onDragOver}>\n            {currentPosition.map((r, rank) =>\n                r.map((f, file) =>\n                    currentPosition[rank][file] ? (\n                        <Piece\n                            key={rank + \"-\" + file}\n                            rank={rank}\n                            file={file}\n                            piece={currentPosition[rank][file]}\n                        />\n                    ) : null,\n                ),\n            )}\n        </div>\n    );\n};\n\nexport default Pieces;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}